<?php

namespace App\Http\Controllers;

use App\Models\DummyModel;
use App\Http\Resources\DummyModelResource;
use Illuminate\Http\Request;
use uhin\laravel_api\UhinApi;

class DummyClass extends Controller
{

    /**
     * Get All
     *
     * @param Request $request
     * @return \Illuminate\Http\Resources\Json\AnonymousResourceCollection
     */
    public function index(Request $request)
    {
        $query = UhinApi::getQueryBuilder(DummyModel::class);
        $query = UhinApi::parseAll($query, $request);
        return DummyModelResource::collection($query->get());
    }

    /**
     * Get by Index
     *
     * @param Request $request
     * @param $DummyModelVariableId
     * @return DummyModelResource
     */
    public function show(Request $request, $DummyModelVariableId)
    {
        $query = UhinApi::getQueryBuilder(DummyModel::class);
        $query = UhinApi::parseFields($query, $request);
        return new DummyModelResource($query->findOrFail($DummyModelVariableId));
    }

    /**
     * Post by index
     *
     * @param Request $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function store(Request $request)
    {
        //Validate required fields
        $validated = $request->validate([
            'data.name' => 'required',
        ]);

        //Create new model and save
        $DummyModelVariable = new DummyModel;
        $DummyModelVariable = UhinApi::fillModelFromValidator($DummyModelVariable, $validated, 'data');
        $DummyModelVariable->save();

        $DummyModelVariable = DummyModel::findOrFail($DummyModelVariable->id);
        $resource = new DummyModelResource($DummyModelVariable);
        return $resource->response()->setStatusCode(201);
    }

    /**
     * Patch by index
     *
     * @param Request $request
     * @param DummyModel $DummyModelVariable
     * @return DummyModelResource
     */
    public function update(Request $request, DummyModel $DummyModelVariable)
    {
        $DummyModelVariable = UhinApi::fillModel($DummyModelVariable, $request);
        $DummyModelVariable->save();
        return new DummyModelResource($DummyModelVariable);
    }

    /**
     * Delete by index
     *
     * @param DummyModel $DummyModelVariable
     * @throws \Exception
     */
    public function destroy(DummyModel $DummyModelVariable)
    {
        $DummyModelVariable->delete();
    }
}
